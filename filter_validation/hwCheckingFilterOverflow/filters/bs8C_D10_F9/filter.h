/***************************************************************************************
*
*  Copyright 2016 Alair Dias Junior
*
*  This file is part of FixedFilterOverflow.
*
*  FixedFilterOverflow is free software: you can redistribute it and/or modify it under the
*  terms of the GNU General Public License as published by the Free Software Foundation,
*  either version 3 of the License, or any later version.
*
*  FilterOverflow is distributed in the hope that it will be useful, but WITHOUT ANY 
*  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
*  PARTICULAR PURPOSE. See the GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License along with 
*  FixedFilterOverflow. If not, see http://www.gnu.org/licenses/.
*
***************************************************************************************/
#ifndef __FILTER_H
#define __FILTER_H

#include "filterSimul.h"

#define INTEGER_BITS 7L
#define FRACTIONAL_BITS 9L

#define a0  FIXED(1,  INTEGER_BITS,FRACTIONAL_BITS)
#define a1  FIXED(-2.18537037833801,  INTEGER_BITS,FRACTIONAL_BITS)
#define a2  FIXED(7.89516713202008,  INTEGER_BITS,FRACTIONAL_BITS)
#define a3  FIXED(-12.3402895092273,  INTEGER_BITS,FRACTIONAL_BITS)
#define a4  FIXED(24.7014921157518,  INTEGER_BITS,FRACTIONAL_BITS)
#define a5  FIXED(-29.4391384926855,  INTEGER_BITS,FRACTIONAL_BITS)
#define a6  FIXED(41.3870780495753,  INTEGER_BITS,FRACTIONAL_BITS)
#define a7  FIXED(-38.5995790325565,  INTEGER_BITS,FRACTIONAL_BITS)
#define a8  FIXED(41.3171873798051,  INTEGER_BITS,FRACTIONAL_BITS)
#define a9  FIXED(-30.2263243441703,  INTEGER_BITS,FRACTIONAL_BITS)
#define a10  FIXED(25.4549278250003,  INTEGER_BITS,FRACTIONAL_BITS)
#define a11  FIXED(-14.2853550297543,  INTEGER_BITS,FRACTIONAL_BITS)
#define a12  FIXED(9.54820470312527,  INTEGER_BITS,FRACTIONAL_BITS)
#define a13  FIXED(-3.83883775937981,  INTEGER_BITS,FRACTIONAL_BITS)
#define a14  FIXED(2.01149278516504,  INTEGER_BITS,FRACTIONAL_BITS)
#define a15  FIXED(-0.464439050232619,  INTEGER_BITS,FRACTIONAL_BITS)
#define a16  FIXED(0.181747814014456,  INTEGER_BITS,FRACTIONAL_BITS)
#define b0  FIXED(0.305911030591898,  INTEGER_BITS,FRACTIONAL_BITS)
#define b1  FIXED(-0.775224757910398,  INTEGER_BITS,FRACTIONAL_BITS)
#define b2  FIXED(3.30677302058672,  INTEGER_BITS,FRACTIONAL_BITS)
#define b3  FIXED(-5.97108936613561,  INTEGER_BITS,FRACTIONAL_BITS)
#define b4  FIXED(13.9380246905115,  INTEGER_BITS,FRACTIONAL_BITS)
#define b5  FIXED(-19.0569383356905,  INTEGER_BITS,FRACTIONAL_BITS)
#define b6  FIXED(30.8943718936205,  INTEGER_BITS,FRACTIONAL_BITS)
#define b7  FIXED(-32.7427246998275,  INTEGER_BITS,FRACTIONAL_BITS)
#define b8  FIXED(39.9144493985963,  INTEGER_BITS,FRACTIONAL_BITS)
#define b9  FIXED(-32.7427246998275,  INTEGER_BITS,FRACTIONAL_BITS)
#define b10  FIXED(30.8943718936205,  INTEGER_BITS,FRACTIONAL_BITS)
#define b11  FIXED(-19.0569383356905,  INTEGER_BITS,FRACTIONAL_BITS)
#define b12  FIXED(13.9380246905115,  INTEGER_BITS,FRACTIONAL_BITS)
#define b13  FIXED(-5.97108936613561,  INTEGER_BITS,FRACTIONAL_BITS)
#define b14  FIXED(3.30677302058672,  INTEGER_BITS,FRACTIONAL_BITS)
#define b15  FIXED(-0.775224757910398,  INTEGER_BITS,FRACTIONAL_BITS)
#define b16  FIXED(0.305911030591898,  INTEGER_BITS,FRACTIONAL_BITS)

#define ORDER 8
#define STAGES 1
#define MAX_DEPTH 10

#define B {b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16}
#define A {a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16}
#define UPPER_INPUT_LIMIT FIXED(24.7018061502435,   INTEGER_BITS,FRACTIONAL_BITS)
#define LOWER_INPUT_LIMIT FIXED(-24.7018061502435,   INTEGER_BITS,FRACTIONAL_BITS)
#define UPPER_OUTPUT_LIMIT (FIXED(128.0,  INTEGER_BITS,FRACTIONAL_BITS) -1)
#define LOWER_OUTPUT_LIMIT FIXED(-128.0, INTEGER_BITS,FRACTIONAL_BITS)
#endif // __FILTER_H
