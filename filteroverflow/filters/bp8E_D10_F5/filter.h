/***************************************************************************************
*
*  Copyright 2016 Alair Dias Junior
*
*  This file is part of FixedFilterOverflow.
*
*  FixedFilterOverflow is free software: you can redistribute it and/or modify it under the
*  terms of the GNU General Public License as published by the Free Software Foundation,
*  either version 3 of the License, or any later version.
*
*  FilterOverflow is distributed in the hope that it will be useful, but WITHOUT ANY 
*  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
*  PARTICULAR PURPOSE. See the GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License along with 
*  FixedFilterOverflow. If not, see http://www.gnu.org/licenses/.
*
***************************************************************************************/
#ifndef __FILTER_H
#define __FILTER_H

#include "filterSimul.h"

#define INTEGER_BITS 8L
#define FRACTIONAL_BITS 5L

#define a0  FIXED(1,  INTEGER_BITS,FRACTIONAL_BITS)
#define a1  FIXED(-2.44746756925244,  INTEGER_BITS,FRACTIONAL_BITS)
#define a2  FIXED(10.0798877678602,  INTEGER_BITS,FRACTIONAL_BITS)
#define a3  FIXED(-17.6579671660451,  INTEGER_BITS,FRACTIONAL_BITS)
#define a4  FIXED(40.0175710697481,  INTEGER_BITS,FRACTIONAL_BITS)
#define a5  FIXED(-53.3335130027508,  INTEGER_BITS,FRACTIONAL_BITS)
#define a6  FIXED(84.3796649033751,  INTEGER_BITS,FRACTIONAL_BITS)
#define a7  FIXED(-87.5886750242631,  INTEGER_BITS,FRACTIONAL_BITS)
#define a8  FIXED(104.720080054248,  INTEGER_BITS,FRACTIONAL_BITS)
#define a9  FIXED(-84.5398440301415,  INTEGER_BITS,FRACTIONAL_BITS)
#define a10  FIXED(78.6110427215596,  INTEGER_BITS,FRACTIONAL_BITS)
#define a11  FIXED(-47.9483669202036,  INTEGER_BITS,FRACTIONAL_BITS)
#define a12  FIXED(34.7232591015678,  INTEGER_BITS,FRACTIONAL_BITS)
#define a13  FIXED(-14.779878078813,  INTEGER_BITS,FRACTIONAL_BITS)
#define a14  FIXED(8.14160973573776,  INTEGER_BITS,FRACTIONAL_BITS)
#define a15  FIXED(-1.90569355594663,  INTEGER_BITS,FRACTIONAL_BITS)
#define a16  FIXED(0.751294882814503,  INTEGER_BITS,FRACTIONAL_BITS)
#define b0  FIXED(0.0107118143548463,  INTEGER_BITS,FRACTIONAL_BITS)
#define b1  FIXED(-0.0253735176757822,  INTEGER_BITS,FRACTIONAL_BITS)
#define b2  FIXED(0.101033602088178,  INTEGER_BITS,FRACTIONAL_BITS)
#define b3  FIXED(-0.173332397438823,  INTEGER_BITS,FRACTIONAL_BITS)
#define b4  FIXED(0.385720334273841,  INTEGER_BITS,FRACTIONAL_BITS)
#define b5  FIXED(-0.510387526137576,  INTEGER_BITS,FRACTIONAL_BITS)
#define b6  FIXED(0.805142797325126,  INTEGER_BITS,FRACTIONAL_BITS)
#define b7  FIXED(-0.842111093359263,  INTEGER_BITS,FRACTIONAL_BITS)
#define b8  FIXED(1.01948852369704,  INTEGER_BITS,FRACTIONAL_BITS)
#define b9  FIXED(-0.842111093359261,  INTEGER_BITS,FRACTIONAL_BITS)
#define b10  FIXED(0.805142797325129,  INTEGER_BITS,FRACTIONAL_BITS)
#define b11  FIXED(-0.510387526137579,  INTEGER_BITS,FRACTIONAL_BITS)
#define b12  FIXED(0.385720334273841,  INTEGER_BITS,FRACTIONAL_BITS)
#define b13  FIXED(-0.173332397438823,  INTEGER_BITS,FRACTIONAL_BITS)
#define b14  FIXED(0.101033602088178,  INTEGER_BITS,FRACTIONAL_BITS)
#define b15  FIXED(-0.0253735176757822,  INTEGER_BITS,FRACTIONAL_BITS)
#define b16  FIXED(0.0107118143548463,  INTEGER_BITS,FRACTIONAL_BITS)

#define ORDER 8
#define STAGES 1
#define MAX_DEPTH 10

#define B {b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15, b16}
#define A {a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16}
#define UPPER_INPUT_LIMIT FIXED(55.7817377163664,   INTEGER_BITS,FRACTIONAL_BITS)
#define LOWER_INPUT_LIMIT FIXED(-55.7817377163664,   INTEGER_BITS,FRACTIONAL_BITS)
#define UPPER_OUTPUT_LIMIT (FIXED(256.0,  INTEGER_BITS,FRACTIONAL_BITS) -1)
#define LOWER_OUTPUT_LIMIT FIXED(-256.0, INTEGER_BITS,FRACTIONAL_BITS)
#endif // __FILTER_H
